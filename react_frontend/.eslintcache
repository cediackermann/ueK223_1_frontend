[{"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/index.tsx":"1","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/App.tsx":"2","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Contexts/ActiveUserContext.tsx":"3","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Router/Router.tsx":"4","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/UserService.ts":"5","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Api.ts":"6","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Authorities.ts":"7","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/AuthorityService.ts":"8","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Router/PrivateRoute.tsx":"9","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/HomePage.tsx":"10","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserPage/UserTable.tsx":"11","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/LoginPage/LoginPage.tsx":"12","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserPage/UserPage.tsx":"13","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/adminPage/AdminPage.tsx":"14","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserDashboard/UserDashboard.tsx":"15","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserProfile/UserProfile.tsx":"16","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/userProfilePage/UserProfilePage.tsx":"17","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/EditProfile.tsx":"18","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Roles.ts":"19","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/UserProfileService.ts":"20","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/molecules/UserForm/UserForm.tsx":"21"},{"size":366,"mtime":1739951571747,"results":"22","hashOfConfig":"23"},{"size":300,"mtime":1739951571746,"results":"24","hashOfConfig":"23"},{"size":6588,"mtime":1740726673972,"results":"25","hashOfConfig":"23"},{"size":2637,"mtime":1740726673972,"results":"26","hashOfConfig":"23"},{"size":623,"mtime":1740726673972,"results":"27","hashOfConfig":"23"},{"size":1749,"mtime":1739951571746,"results":"28","hashOfConfig":"23"},{"size":294,"mtime":1740726673973,"results":"29","hashOfConfig":"23"},{"size":1201,"mtime":1739951571746,"results":"30","hashOfConfig":"23"},{"size":1401,"mtime":1740726673972,"results":"31","hashOfConfig":"23"},{"size":1439,"mtime":1739951571746,"results":"32","hashOfConfig":"23"},{"size":4922,"mtime":1740726673973,"results":"33","hashOfConfig":"23"},{"size":5554,"mtime":1740726673973,"results":"34","hashOfConfig":"23"},{"size":1069,"mtime":1740726673973,"results":"35","hashOfConfig":"23"},{"size":1172,"mtime":1740726673973,"results":"36","hashOfConfig":"23"},{"size":2669,"mtime":1740726673973,"results":"37","hashOfConfig":"23"},{"size":3907,"mtime":1740726673973,"results":"38","hashOfConfig":"23"},{"size":4191,"mtime":1740726673973,"results":"39","hashOfConfig":"23"},{"size":2439,"mtime":1740726673973,"results":"40","hashOfConfig":"23"},{"size":77,"mtime":1740726673973,"results":"41","hashOfConfig":"23"},{"size":2010,"mtime":1740726673972,"results":"42","hashOfConfig":"23"},{"size":3240,"mtime":1739951571746,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xx2nni",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/index.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/App.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Contexts/ActiveUserContext.tsx",["90","91"],"import { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../config/Api\";\nimport roles from \"../config/Roles\";\nimport AuthorityService from \"../Services/AuthorityService\";\nimport UserService from \"../Services/UserService\";\nimport { User } from \"../types/models/User.model\";\nimport { Nullable } from \"../types/Nullable\";\nimport * as jwt from \"jsonwebtoken\";\nimport {JwtPayload} from \"jsonwebtoken\";\nimport {unmountComponentAtNode} from \"react-dom\";\n\n/**\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\n * activeUser gets stored.\n */\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\n\n/**\n * ActiveUserContextType defines the provided values\n */\nexport type ActiveUserContextType = {\n  user: Nullable<User>;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  setActiveUser: (user: User) => void;\n  loadActiveUser: () => void;\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\n};\n\n/**\n * noContextProviderFound is a method that throws an error and is used\n * inside the defaultContextValue\n */\nconst noContextProviderFound = () => {\n  throw new Error(\"No provider for the ActiveUserContext found\");\n};\n\n/**\n * defaultContextValue defines the default values for the ActiveUserContext.\n */\nconst defaultContextValue: ActiveUserContextType = {\n  user: null,\n  login: noContextProviderFound,\n  logout: noContextProviderFound,\n  setActiveUser: noContextProviderFound,\n  loadActiveUser: noContextProviderFound,\n  checkRole: noContextProviderFound,\n};\n\n/**\n * ActiveUserContext has the purpose of providing the currently active user\n * as well as related values, modifiers and related operations such as login\n * and logout.\n */\nconst ActiveUserContext =\n    createContext<ActiveUserContextType>(defaultContextValue);\nexport default ActiveUserContext;\n\n/**\n * Props for the ActiveUserContextProvider Component\n */\ntype ActiveUserContextProviderProps = {\n  children: React.ReactNode;\n};\n\n/**\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\n * to all child-components.\n * @param children consists of all the elements that are located inside the\n */\nexport const ActiveUserContextProvider = ({\n                                            children,\n                                          }: ActiveUserContextProviderProps) => {\n  /**\n   * Try to load the user data that is stored inside the LocalStorage.\n   * If non is present, null will be returned.\n   */\n  const loadSavedUserData = (): Nullable<User> => {\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\n    if (storeUser === null) return null;\n    return JSON.parse(storeUser);\n  };\n\n  // The following line defines the user state which is holding the user\n  // data inside this context.\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\n  const navigate = useNavigate();\n  /**\n   * Update the user that is provided by the ActiveUserContext\n   * @param updatedUser\n   */\n  const setActiveUser = (updatedUser: User) => {\n    setUser(updatedUser);\n    localStorage.setItem(\n        USER_DATA_LOCAL_STORAGE_KEY,\n        JSON.stringify(updatedUser)\n    );\n  };\n\n  /**\n   * Remove all user and authorization related data from the localStorage\n   */\n  const resetAuthorization = () => {\n    // Reset the stored data inside the AuthorityService.\n    AuthorityService.clearAuthorities();\n    // Clear all data from the localStorage.\n    localStorage.clear();\n    // Set the user, which is stored inside the context to null.\n    setUser(null);\n  };\n\n  /**\n   * Logout the currently active user by resetting the stored user data\n   * and redirecting to the LoginPage.\n   */\n  const logout = () => {\n    // If no token is saved inside the local storage clear the localStorage directly\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\n      resetAuthorization();\n      return;\n    }\n    // If a token is present send a logout-request and clear the localStorage afterwards\n    api.get(\"/logout\").finally(resetAuthorization);\n    //navigate to login page\n    navigate(\"/login\");\n  };\n\n  /**\n   * Login with the provided credentials. If successful the current user gets\n   * updated and stored inside the context. Also the JWT-Token for further\n   * request based authentication is stored inside the localStorage.\n   * @param email\n   * @param password\n   */\n  const login = async (email: string, password: string) => {\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\n      console.log(response.headers.authorization);\n      localStorage.setItem(\n          TOKEN_LOCAL_STORAGE_KEY,\n          response.headers.authorization\n      );\n      const tokenString = response.headers.authorization.replace('Bearer ', '');\n      const token = jwt.decode(tokenString) as JwtPayload;\n      UserService.getUser(token.sub!).then((user: User) => {\n        setActiveUser(user);\n      })\n      return true;\n    });\n    return false;\n  };\n\n  /**\n   * Request the user data for the currently active user from the api\n   * and save it to the context-state.\n   */\n  const loadActiveUser = () => {\n    return user\n        ? UserService.getUser(user.id).then((res: any) => {\n          setActiveUser(res);\n        })\n        : null;\n  };\n\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\n  }\n\n  /**\n   * Try to load the user-object from the localStorage if present.\n   * This is done automatically on the first render of this component.\n   */\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\n    if (token !== null) {\n      loadActiveUser();\n    }\n  }, []);\n\n  /**\n   * If the user state is updated and the user is not equal to null,\n   * the data used in the AuthorityService as well as the data stored inside\n   * the localStorage will be updated with the new user-data.\n   */\n  useEffect(() => {\n    if (user !== null) {\n      AuthorityService.initAuthoritySet(user);\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\n    }\n  }, [user]);\n\n  return (\n      <div>\n        <ActiveUserContext.Provider\n            value={{\n              user,\n              setActiveUser,\n              login,\n              logout,\n              loadActiveUser,\n              checkRole: activeUserHasRole,\n            }}\n        >\n          {children}\n        </ActiveUserContext.Provider>\n      </div>\n  );\n};\n","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Router/Router.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/UserService.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Api.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Authorities.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/AuthorityService.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Router/PrivateRoute.tsx",["92"],"import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport * as jwt from 'jsonwebtoken';\nimport ActiveUserContext from '../Contexts/ActiveUserContext';\nimport AuthorityService from '../Services/AuthorityService';\nimport { Button } from '@mui/material';\nimport authorities from '../config/Authorities';\n\ninterface Props {\n  requiredAuths: authorities[];\n  children: React.ReactElement;\n}\n\ntype JWTType = {\n  iss: string;\n  exp: number;\n};\n\nconst PrivateRoute: React.FC<Props> = ({ requiredAuths, children }) => {\n  const activeUserContext = useContext(ActiveUserContext);\n\n  const isLoggedIn = () => {\n    let tokenString = localStorage.getItem('token');\n    if (!tokenString) {\n      console.error('no token found');\n      return false;\n    }\n    tokenString = tokenString.replace('Bearer ', '');\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\n      return false;\n    }\n    return true;\n  };\n\n  if (!isLoggedIn()) {\n    activeUserContext.logout();\n    return <Navigate to='/login' replace={true} />;\n  }\n\n  const hasNeededAuthorities =\n      requiredAuths.length === 0 ||\n      requiredAuths.every(AuthorityService.hasAuthority);\n\n  if (!hasNeededAuthorities) {\n    return <Navigate to='/unauthorized' replace={true} />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default PrivateRoute;","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/HomePage.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserPage/UserTable.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/LoginPage/LoginPage.tsx",["93","94","95"],"import {\n    Paper,\n    Grid,\n    TextField,\n    Button,\n    Typography,\n    Link,\n} from '@mui/material';\nimport React, { useContext, useEffect } from 'react';\nimport { Form, Formik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport ActiveUserContext from '../../../Contexts/ActiveUserContext';\nimport authorities from '../../../config/Authorities';\nimport roles from \"../../../config/Roles\";\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required'),\n});\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const { user, login,checkRole } = useContext(ActiveUserContext);\n\n    useEffect(() => {\n        if (user && user.roles) {\n            const isAdmin = checkRole(roles.ADMIN);\n            navigate(isAdmin ? '/admin' : '/dashboard');\n        }\n    }, [user, navigate]);\n\n    const handleSubmit = (values: { email: string; password: string }) => {\n        login(values.email.toLowerCase(), values.password)\n            .then((loggedInUser) => {\n                const isAdmin = checkRole(roles.ADMIN);\n                navigate(isAdmin ? '/admin' : '/dashboard');\n            })\n            .catch((error) => {\n                if (error.response?.status === 401 || error.response?.status === 403) {\n                    alert('Invalid login');\n                } else {\n                    alert('Login Error');\n                }\n            });\n    };\n\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            height=\"100vh\"\n            sx={{\n                background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\n            }}\n        >\n            <Paper\n                elevation={10}\n                sx={{\n                    padding: 4,\n                    width: 320,\n                    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                    backdropFilter: 'blur(10px)',\n                    color: '#fff',\n                    textAlign: 'center',\n                }}\n            >\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                    Sign In\n                </Typography>\n                <Formik\n                    initialValues={{ email: '', password: '' }}\n                    validationSchema={validationSchema}\n                    onSubmit={handleSubmit}\n                >\n                    {({ values, handleChange, handleBlur, handleSubmit, errors }) => (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Email\"\n                                id=\"email\"\n                                placeholder=\"Enter email\"\n                                fullWidth\n                                required\n                                margin=\"normal\"\n                                InputProps={{\n                                    style: { color: '#fff' },\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                                sx={{ '& label': { color: '#fff' }, '& .MuiOutlinedInput-root': { borderColor: '#fff' } }}\n                            />\n                            {errors.email && <Typography color=\"error\">{errors.email}</Typography>}\n                            <TextField\n                                id=\"password\"\n                                label=\"Password\"\n                                placeholder=\"Enter password\"\n                                type=\"password\"\n                                fullWidth\n                                required\n                                margin=\"normal\"\n                                InputProps={{\n                                    style: { color: '#fff' },\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.password}\n                                sx={{ '& label': { color: '#fff' }, '& .MuiOutlinedInput-root': { borderColor: '#fff' } }}\n                            />\n                            {errors.password && <Typography color=\"error\">{errors.password}</Typography>}\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                fullWidth\n                                sx={{\n                                    mt: 2,\n                                    backgroundColor: '#00d4ff',\n                                    '&:hover': { backgroundColor: '#0f0fcf' },\n                                }}\n                            >\n                                Sign in\n                            </Button>\n                        </form>\n                    )}\n                </Formik>\n                <Typography sx={{ mt: 2 }}>\n                    <Link href=\"#\" color=\"inherit\">\n                        Forgot password?\n                    </Link>\n                </Typography>\n                <Typography>\n                    Don't have an account?{' '}\n                    <Link href=\"#\" color=\"inherit\">\n                        Sign Up\n                    </Link>\n                </Typography>\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default Login;\n","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserPage/UserPage.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/adminPage/AdminPage.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserDashboard/UserDashboard.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/UserProfile/UserProfile.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/userProfilePage/UserProfilePage.tsx",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/pages/EditProfile.tsx",["96"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserProfileService from \"../../Services/UserProfileService\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Button from \"@mui/material/Button\";\n\nexport default function EditProfile() {\n  const [userProfile, setUserProfile] = useState<UserProfile>({\n    id: \"\",\n    address: \"\",\n    birthDate: \"\",\n    profilePictureUrl: \"\",\n  });\n  const { id } = useParams();\n\n  const fetchUserProfile = async () => {\n    try {\n      if (id) {\n        const profile = await UserProfileService.getUserProfileById(id);\n        console.log(profile);\n        setUserProfile(profile);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user profile:\", error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setUserProfile((prevProfile) => ({\n      ...prevProfile,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await UserProfileService.updateUserProfile(userProfile);\n      alert(\"Profile updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating user profile:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [id]);\n\n  return (\n    <>\n      {userProfile && (\n        <form onSubmit={handleSubmit}>\n          <FormControl>\n            <TextField label='ID' name='id' value={userProfile.id} disabled />\n            <TextField\n              label='Address'\n              name='address'\n              value={userProfile.address}\n              onChange={handleInputChange}\n            />\n            <TextField\n              label='Birthdate'\n              name='birthDate'\n              value={userProfile.birthDate}\n              onChange={handleInputChange}\n            />\n            <TextField\n              label='Profile Picture URL'\n              name='profilePictureUrl'\n              value={userProfile.profilePictureUrl}\n              onChange={handleInputChange}\n            />\n            <Button type='submit' variant='contained' color='primary'>\n              Save\n            </Button>\n          </FormControl>\n        </form>\n      )}\n    </>\n  );\n}\n\ninterface UserProfile {\n  id: string;\n  address: string;\n  birthDate: string;\n  profilePictureUrl: string;\n}\n","/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/config/Roles.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/Services/UserProfileService.ts",[],"/home/cediackermann/ueK/223/ueK223_1_frontend/react_frontend/src/components/molecules/UserForm/UserForm.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":179,"column":6,"nodeType":"103","endLine":179,"endColumn":8,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":14},{"ruleId":"97","severity":1,"message":"107","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":31,"column":8,"nodeType":"103","endLine":31,"endColumn":24,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"110","line":49,"column":6,"nodeType":"103","endLine":49,"endColumn":10,"suggestions":"111"},"@typescript-eslint/no-unused-vars","'unmountComponentAtNode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'Button' is defined but never used.","'Form' is defined but never used.","'authorities' is defined but never used.","React Hook useEffect has a missing dependency: 'checkRole'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["114"],{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [loadActiveUser]",{"range":"121","text":"122"},"Update the dependencies array to be: [user, navigate, checkRole]",{"range":"123","text":"124"},"Update the dependencies array to be: [fetchUserProfile, id]",{"range":"125","text":"126"},[5819,5821],"[loadActiveUser]",[923,939],"[user, navigate, checkRole]",[1376,1380],"[fetchUserProfile, id]"]